using Newtonsoft.Json.Linq;
using Richter.DesignPatterns.Strategy2.DataTransferObjects;
using Richter.DesignPatterns.Strategy2.Repositories;

namespace Richter.DesignPatterns.Strategy2.Strategies
{
    internal class LaboratoryXStrategy : ILaboratoryStrategy
    {
        private readonly IFakeRepository _repository = new FakeRepository();//Seria correto utilizar DI num caso real.

        public Message GetMessage(JObject jObj)
        {
            var dto = jObj.ToObject<LaboratoryXDto>();

            var proc = _repository.LoadMedicalProcedureById(dto.MedicalProcedureCode);
            proc.ExecutionDate = Convert.ToDateTime(dto.Date);
            proc.Name += $"| Generated by Strategy class {this.GetType().Name}";

            var patient = _repository.LoadPatientByCode(dto.PatientCode);

            return new Message
            {
                ExternalServiceId = (int)SourceType.LaboratoryX,
                MedicalProcedure = proc,
                Patient = patient
            };
        }
    }
}
